/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VMMemoryFrame.java
 *
 * Created on Mar 22, 2011, 9:07:33 PM
 */

package GUI.VMMemoryFrame;

import GUI.EmulatorFrame.EmulatorPaneController;
import MachineDataUtilities.MachineDataUtilities;

/**
 *
 * @author karolis
 */
public class VMMemoryFrame extends javax.swing.JFrame {

    /** Creates new form VMMemoryFrame */
    public VMMemoryFrame(int segmentQuantity) {
        initVirtualMemoryTableModel(segmentQuantity);
        initComponents();
        initFrame();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vmMemoryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        vmMemoryTable.setModel(this.memoryTableModel);
        try
        {
            this.vmMemoryTable.setDefaultRenderer(Class.forName
                ( "java.lang.String" ), this.virtualMemoryTableCellRender);

        } catch(ClassNotFoundException e)
        {
            System.exit( 0 );
        }
        jScrollPane1.setViewportView(vmMemoryTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable vmMemoryTable;
    // End of variables declaration//GEN-END:variables

    private VirtualMemoryTableModel memoryTableModel;
    private VirtualMemoryTableCellRender virtualMemoryTableCellRender =
                                             new VirtualMemoryTableCellRender();
    //--------------------------------------------------------------------------
    private void initFrame()
    {
        this.setTitle("VM atmintis");
        this.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.setSize(900, 500);
        this.setResizable(false);
    }

    private void initVirtualMemoryTableModel(int segmentQuantity)
    {
        this.memoryTableModel = new VirtualMemoryTableModel(segmentQuantity);

        for (int index = 0; index < segmentQuantity * 0x100; index += 0x10)
        {
            this.setMemoryTableModelValue(index, index / 0x10, 0, 4);

        }
        
        this.repaint();
    }

     /*
     * Skirta virtualiems adresams
     */
    public void setMemoryTableModelValue (int aValue, int rowIndex,
                                          int columnIndex, int digitCount)
    {
        this.memoryTableModel.setValueAt
                           (MachineDataUtilities.formatData(aValue, digitCount),
                            rowIndex, columnIndex);
    }

    /*
     *Skirta iÅ¡parsintom komandom
     */
    public void setMemoryTableModelValue
                                 (String command, int rowIndex, int columnIndex)
    {
        this.memoryTableModel.setValueAt(command, rowIndex, columnIndex);
    }

    public void setNextCommandAddress(int address)
    {
        this.virtualMemoryTableCellRender.setNextCommandAddress(address);
    }

    public void updateVirtualMemoryTable(int[] virtualMemoryPart,
                                         int segmentNumber)
    {
        
        for (int index = 0; index < virtualMemoryPart.length; index++)
        {
            String command = 
                        MachineDataUtilities.
                            parseInstruction(virtualMemoryPart[index]);

            int column = index % 0x10 + 1;
            int row = (index + (segmentNumber * 0x100)) / 0x10;

            this.memoryTableModel.setValueAt(command, row, column);
        }

        this.repaint();
    }

    //--------------------------------------------------------------------------
    public static void create(EmulatorPaneController emulatorPaneController,
                              int segmentQunatity)
    {
        VMMemoryFrame vmMemoryFrame = new VMMemoryFrame(segmentQunatity);
        emulatorPaneController.setVMMemoryFrame(vmMemoryFrame);
        //VMMemoryFrameController vmMemoryFrameController =
        //                             new VMMemoryFrameController(vmMemoryFrame);
        vmMemoryFrame.setVisible(true);
    }
}
